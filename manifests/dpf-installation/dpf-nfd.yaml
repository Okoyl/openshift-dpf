

# Source: dpf-operator/charts/node-feature-discovery/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dpf-operator-node-feature-discovery
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: dpf-operator/charts/node-feature-discovery/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dpf-operator-node-feature-discovery-gc
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: dpf-operator/charts/node-feature-discovery/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dpf-operator-node-feature-discovery-worker
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm

---
# Source: dpf-operator/charts/node-feature-discovery/templates/nfd-master-conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dpf-operator-node-feature-discovery-master-conf
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
data:
  nfd-master.conf: |-
    null
---
# Source: dpf-operator/charts/node-feature-discovery/templates/nfd-worker-conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dpf-operator-node-feature-discovery-worker-conf
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
data:
  nfd-worker.conf: |-
    sources:
      pci:
        deviceClassWhitelist:
        - "0200"
        deviceLabelFields:
        - class
        - vendor
        - device

---
# Source: dpf-operator/charts/node-feature-discovery/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dpf-operator-node-feature-discovery
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  - nodefeaturerules
  - nodefeaturegroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeaturegroups/status
  verbs:
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - "nfd-master.nfd.kubernetes.io"
  verbs:
  - get
  - update
---
# Source: dpf-operator/charts/node-feature-discovery/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dpf-operator-node-feature-discovery-gc
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  verbs:
  - get
- apiGroups:
  - topology.node.k8s.io
  resources:
  - noderesourcetopologies
  verbs:
  - delete
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  verbs:
  - delete
  - list

---
# Source: dpf-operator/charts/node-feature-discovery/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dpf-operator-node-feature-discovery
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dpf-operator-node-feature-discovery
subjects:
- kind: ServiceAccount
  name: dpf-operator-node-feature-discovery
  namespace: dpf-operator-system
---
# Source: dpf-operator/charts/node-feature-discovery/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dpf-operator-node-feature-discovery-gc
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dpf-operator-node-feature-discovery-gc
subjects:
- kind: ServiceAccount
  name: dpf-operator-node-feature-discovery-gc
  namespace: dpf-operator-system

---
# Source: dpf-operator/charts/node-feature-discovery/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dpf-operator-node-feature-discovery-worker
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeatures
  verbs:
  - create
  - get
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - delete

---
# Source: dpf-operator/charts/node-feature-discovery/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dpf-operator-node-feature-discovery-worker
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dpf-operator-node-feature-discovery-worker
subjects:
- kind: ServiceAccount
  name: dpf-operator-node-feature-discovery-worker
  namespace: dpf-operator-system

---
# Source: dpf-operator/charts/node-feature-discovery/templates/worker.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  dpf-operator-node-feature-discovery-worker
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
    role: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      app.kubernetes.io/instance: dpf-operator
      role: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: dpf-operator
        role: worker
    spec:
      dnsPolicy: Default
      serviceAccountName: dpf-operator-node-feature-discovery-worker
      securityContext:
        {}
      hostNetwork: true
      containers:
      - name: worker
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        image: "quay.io/itsoiref/nfd:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
            grpc:
              port: 8082
            initialDelaySeconds: 10
        readinessProbe:
            failureThreshold: 10
            grpc:
              port: 8082
            initialDelaySeconds: 5
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: KUBERNETES_SERVICE_HOST
          value: api.CLUSTER_FQDN
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 5m
              memory: 64Mi
        command:
        - "nfd-worker"
        args:
# Go over featureGate and add the feature-gate flag
        - "-feature-gates=NodeFeatureAPI=true"
        - "-feature-gates=NodeFeatureGroupAPI=false"
        - "-metrics=8081"
        - "-grpc-health=8082"
        ports:
          - containerPort: 8081
            name: metrics
          - containerPort: 8082
            name: health
        volumeMounts:
        - name: host-boot
          mountPath: "/host-boot"
          readOnly: true
        - name: host-os-release
          mountPath: "/host-etc/os-release"
          readOnly: true
        - name: host-sys
          mountPath: "/host-sys"
          readOnly: true
        - name: host-usr-lib
          mountPath: "/host-usr/lib"
          readOnly: true
        - name: host-lib
          mountPath: "/host-lib"
          readOnly: true
        - name: host-proc-swaps
          mountPath: "/host-proc/swaps"
          readOnly: true
        - name: source-d
          mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
          readOnly: true
        - name: features-d
          mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
          readOnly: true
        - name: nfd-worker-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
        - name: host-boot
          hostPath:
            path: "/boot"
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
        - name: host-sys
          hostPath:
            path: "/sys"
        - name: host-usr-lib
          hostPath:
            path: "/usr/lib"
        - name: host-lib
          hostPath:
            path: "/lib"
        - name: host-proc-swaps
          hostPath:
            path: "/proc/swaps"
        - name: source-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/source.d/"
        - name: features-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d/"
        - name: nfd-worker-conf
          configMap:
            name: dpf-operator-node-feature-discovery-worker-conf
            items:
              - key: nfd-worker.conf
                path: nfd-worker.conf
      tolerations:
        - key: node.kubernetes.io/not-ready
          operator: Exists
---
# Source: dpf-operator/charts/node-feature-discovery/templates/master.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  dpf-operator-node-feature-discovery-master
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
    role: master
spec:
  replicas: 1
  revisionHistoryLimit: 
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      app.kubernetes.io/instance: dpf-operator
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: dpf-operator
        role: master
    spec:
      serviceAccountName: dpf-operator-node-feature-discovery
      enableServiceLinks: false
      securityContext:
        {}
      hostNetwork: false
      containers:
        - name: master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "registry.k8s.io/nfd/node-feature-discovery:v0.16.5"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            grpc:
              port: 8082
            initialDelaySeconds: 10
          readinessProbe:
            failureThreshold: 10
            grpc:
              port: 8082
            initialDelaySeconds: 5
          ports:
          - containerPort: 8080
            name: grpc
          - containerPort: 8081
            name: metrics
          - containerPort: 8082
            name: health
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          command:
            - "nfd-master"
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 128Mi
          args:
            ## By default, disable crd controller for other than the default instances
            - "-crd-controller=true"
            # Go over featureGates and add the feature-gate flag
            - "-feature-gates=NodeFeatureAPI=true"
            - "-feature-gates=NodeFeatureGroupAPI=false"
            - "-metrics=8081"
            - "-grpc-health=8082"
          volumeMounts:
            - name: nfd-master-conf
              mountPath: "/etc/kubernetes/node-feature-discovery"
              readOnly: true
      volumes:
        - name: nfd-master-conf
          configMap:
            name: dpf-operator-node-feature-discovery-master-conf
            items:
              - key: nfd-master.conf
                path: nfd-master.conf
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
---
# Source: dpf-operator/charts/node-feature-discovery/templates/nfd-gc.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpf-operator-node-feature-discovery-gc
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
    role: gc
spec:
  replicas: 1
  revisionHistoryLimit: 
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      app.kubernetes.io/instance: dpf-operator
      role: gc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: dpf-operator
        role: gc
    spec:
      serviceAccountName: dpf-operator-node-feature-discovery-gc
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        {}
      hostNetwork: false
      containers:
      - name: gc
        image: "registry.k8s.io/nfd/node-feature-discovery:v0.16.5"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
          - "nfd-gc"
        args:
          - "-gc-interval=1h"
        resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        ports:
          - name: metrics
            containerPort: 8081
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists

---
# Source: dpf-operator/templates/node-feature-rule.yaml
apiVersion: nfd.k8s-sigs.io/v1alpha1
kind: NodeFeatureRule
metadata:
  name: dpu-detection-rule
spec:
  rules:
    - name: "DPU-detection-rule"
      labels:
        "dpu-enabled": "true"
      matchFeatures:
        - feature: pci.device
          matchExpressions:
            vendor: {op: In, value: ["15b3"]}
            # TODO: Make this settable from the values
            device: {op: In, value:  ["a2d6", "a2dc"] }

---
# Source: dpf-operator/charts/node-feature-discovery/templates/post-delete-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dpf-operator-node-feature-discovery-prune
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
---
# Source: dpf-operator/charts/node-feature-discovery/templates/post-delete-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dpf-operator-node-feature-discovery-prune
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dpf-operator-node-feature-discovery-prune
subjects:
- kind: ServiceAccount
  name: dpf-operator-node-feature-discovery-prune
  namespace: dpf-operator-system

---
# Source: dpf-operator/charts/node-feature-discovery/templates/post-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  dpf-operator-node-feature-discovery-prune
  namespace: dpf-operator-system
  labels:
    helm.sh/chart: node-feature-discovery-0.16.5
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: dpf-operator
    app.kubernetes.io/version: "v0.16.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        helm.sh/chart: node-feature-discovery-0.16.5
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: dpf-operator
        app.kubernetes.io/version: "v0.16.5"
        app.kubernetes.io/managed-by: Helm
        role: prune
    spec:
      serviceAccountName: dpf-operator-node-feature-discovery-prune
      containers:
        - name: nfd-master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "registry.k8s.io/nfd/node-feature-discovery:v0.16.5"
          imagePullPolicy: IfNotPresent
          command:
            - "nfd-master"
          args:
            - "-prune"
      restartPolicy: Never
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
